version: 2

jobs:
  go-test:
    working_directory: /go/src/gopkg.in/launchdarkly/ld-relay

    docker:
      - image: circleci/golang:1.9
        environment:
          CIRCLE_TEST_REPORTS: /tmp/circle-reports
          COMMON_GO_PACKAGES: >
            gopkg.in/alecthomas/gometalinter.v2
            github.com/jstemmer/go-junit-report
            github.com/laher/goxc
          DOCKER_COMPOSE: docker-compose -f docker-compose-build.yml
      - image: redis

    steps:
      - checkout
      - setup_remote_docker

      - run: go get -u $COMMON_GO_PACKAGES
      - run: go version
      - run: goxc -version

      - run: gometalinter.v2 --install
      - run: gometalinter.v2 --disable gocyclo --disable golint --disable goconst --disable errcheck --disable maligned --disable vetshadow

      - run: go build

      - run:
          name: Wait for services to be ready
          command: dockerize -wait tcp://localhost:6379 -timeout 1m  # redis

      - run: |
          mkdir -p $CIRCLE_TEST_REPORTS
          trap "go-junit-report < output.txt > $CIRCLE_TEST_REPORTS/junit.xml" EXIT
          go test -race -v ./... | tee output.txt

      - store_test_results:
          path: /tmp/circle-reports

      - run: ${DOCKER_COMPOSE} -p builder up -d
      - run: >
          ${DOCKER_COMPOSE} -p builder run builder go build -a -installsuffix cgo -o ldr
      - run: docker cp builder_builder_1:/go/src/github.com/launchdarkly/ld-relay/ldr .
      - run: docker build -t "ld-relay:$CIRCLE_BUILD_NUM" .

      - deploy:
          name: Push docker image
          command: |
            ./scripts/upload_to_dockerhub.sh
workflows:
  version: 2
  test:
    jobs:
      - go-test
